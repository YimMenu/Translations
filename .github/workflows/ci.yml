name: CI

on: pull_request

jobs:
  ci:
    runs-on: ubuntu-latest
    name: CI
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/checkout@v3
        with:
          ref: master
          path: old

      - name: Run util validate
        run: node .github/util.mjs validate old/index.json

      - name: Post util validate
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const process = require('process');
            const result = JSON.parse(fs.readFileSync(".result.json"));
            if (result.changed?.length === 0 && result.errors?.length === 0 && result.warnings?.length === 0) process.exit(0)
            const {owner, repo} = context.repo;
            const pull_request = ${{ github.event.number }};
            if (!pull_request) {
              return core.error("This workflow doesn't match any pull requests!");
            }

            const errors = [`
              > <picture>
              >   <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/Mqxx/GitHub-Markdown/f4116f5b4a31c72fcfdd5cb9869bb4ae2a2cf4a8/blockquotes/badge/light-theme/error.svg">
              >   <img alt="Error" src="https://raw.githubusercontent.com/Mqxx/GitHub-Markdown/f4116f5b4a31c72fcfdd5cb9869bb4ae2a2cf4a8/blockquotes/badge/dark-theme/error.svg">
              > </picture><br>`]

            result.errors.forEach(error => {
              errors.push(`> ${error}`)
            })

            const warnings = ["> **Warning**"]

            result.warnings.forEach(warn => {
              warnings.push(`> ${warn}`)
            })

            const infos = ["> **Note**"]

            result.changed.forEach(info => {
              infos.push(`> ${info}`)
            })

            const body = `
              ${infos.length > 1 ? infos.join("\n") : ""}

              ${warnings.length > 1 ? warnings.join("\n") : ""}

              ${errors.length > 1 ? errors.join("\n") : ""}
            `

            await github.rest.issues.createComment({ owner, repo, issue_number: pull_request, body });

      - name: Run util merge
        run: |
          rm .result.json
          cmp --silent ./en_US.json ./old/en_US.json || node .github/util.mjs merge
          [ -f .result.json ] || exit 0
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./*.json
          git commit -m "chore: merge translations" || exit 0
          git push
